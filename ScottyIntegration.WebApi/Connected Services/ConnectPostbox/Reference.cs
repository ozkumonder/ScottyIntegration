//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConnectPostbox
{
    using System.Runtime.Serialization;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "LoginType", Namespace = "http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    public partial class LoginType : object
    {

        private string appStrField;

        private string passWordField;

        private string sourceField;

        private string userNameField;

        private string versionField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string appStr
        {
            get
            {
                return this.appStrField;
            }
            set
            {
                this.appStrField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string passWord
        {
            get
            {
                return this.passWordField;
            }
            set
            {
                this.passWordField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string source
        {
            get
            {
                return this.sourceField;
            }
            set
            {
                this.sourceField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName
        {
            get
            {
                return this.userNameField;
            }
            set
            {
                this.userNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                this.versionField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DocumentType", Namespace = "http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    public partial class DocumentType : object
    {

        private ConnectPostbox.base64BinaryData binaryDataField;

        private System.DateTime currentDateField;

        private string fileNameField;

        private string hashField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConnectPostbox.base64BinaryData binaryData
        {
            get
            {
                return this.binaryDataField;
            }
            set
            {
                this.binaryDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime currentDate
        {
            get
            {
                return this.currentDateField;
            }
            set
            {
                this.currentDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fileName
        {
            get
            {
                return this.fileNameField;
            }
            set
            {
                this.fileNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hash
        {
            get
            {
                return this.hashField;
            }
            set
            {
                this.hashField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "base64BinaryData", Namespace = "http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    public partial class base64BinaryData : object
    {

        private byte[] ValueField;

        private string contentTypeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contentType
        {
            get
            {
                return this.contentTypeField;
            }
            set
            {
                this.contentTypeField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EArchiveDocumentTypes", Namespace = "http://schemas.datacontract.org/2004/07/eFaturaCoreLib.Common")]
    public enum EArchiveDocumentTypes : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVOICE = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        REPORT = 2,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ElementType", Namespace = "http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    public partial class ElementType : object
    {

        private ConnectPostbox.base64BinaryData binaryDataField;

        private System.DateTime currentDateField;

        private string envelopeIdField;

        private string fileNameField;

        private string gbLabelField;

        private string hashField;

        private string pkLabelField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConnectPostbox.base64BinaryData binaryData
        {
            get
            {
                return this.binaryDataField;
            }
            set
            {
                this.binaryDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime currentDate
        {
            get
            {
                return this.currentDateField;
            }
            set
            {
                this.currentDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string envelopeId
        {
            get
            {
                return this.envelopeIdField;
            }
            set
            {
                this.envelopeIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fileName
        {
            get
            {
                return this.fileNameField;
            }
            set
            {
                this.fileNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gbLabel
        {
            get
            {
                return this.gbLabelField;
            }
            set
            {
                this.gbLabelField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hash
        {
            get
            {
                return this.hashField;
            }
            set
            {
                this.hashField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pkLabel
        {
            get
            {
                return this.pkLabelField;
            }
            set
            {
                this.pkLabelField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "InvoiceStatus", Namespace = "http://schemas.datacontract.org/2004/07/CommonLib.Helpers")]
    public enum InvoiceStatus : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        TEMP = -99,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        PUSHQUEUEERROR = -11,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUSPEND = -5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DELETED = -4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAIL = -1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        RAW = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        PROCESSSED = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNED = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ENVELOPED = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXTRACTED = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNRECEIVED = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        RECEIVED = 6,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "AppRespStatus", Namespace = "http://schemas.datacontract.org/2004/07/eFaturaCoreLib.Common")]
    public enum AppRespStatus : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        TEMP = -99,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        PUSHQUEUEERROR = -11,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUSPEND = -5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DELETED = -4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAIL = -1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        RAW = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        PROCESSSED = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNED = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ENVELOPED = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXTRACTED = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNRECEIVED = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        RECEIVED = 6,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SendRecvType", Namespace = "http://schemas.datacontract.org/2004/07/CommonLib")]
    public enum SendRecvType : byte
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SEND = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        RECV = 2,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PostBoxDateType", Namespace = "http://schemas.datacontract.org/2004/07/eFaturaCoreLib.Common")]
    public enum PostBoxDateType : byte
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        byCREATED = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        byENVELOPEDATE = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        byCURRENTDATE = 2,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "InvoiceDateType", Namespace = "http://schemas.datacontract.org/2004/07/eFaturaCoreLib.Common")]
    public enum InvoiceDateType : byte
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        byCREATED = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        byISSUEDATE = 1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "UserListType", Namespace = "http://schemas.datacontract.org/2004/07/CommonLib")]
    public enum UserListType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        GBLIST = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        PKLIST = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        LIST4760 = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        LIST5015 = 4,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDocumentType", Namespace = "http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    public enum GetDocumentType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        EINVOICE = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        EARCHIVE = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        APPLICATIONRESPONSE = 3,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DocumentDataType", Namespace = "http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    public enum DocumentDataType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        UBL = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDF = 2,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ReconInvoiceType", Namespace = "http://schemas.datacontract.org/2004/07/CommonLib")]
    public partial class ReconInvoiceType : object
    {

        private bool CancelField;

        private System.DateTime InvoiceDateField;

        private string InvoiceNumberField;

        private System.Nullable<ConnectPostbox.EArchiveInvoiceStatusForRecon> InvoiceStatusField;

        private string UuidField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Cancel
        {
            get
            {
                return this.CancelField;
            }
            set
            {
                this.CancelField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InvoiceDate
        {
            get
            {
                return this.InvoiceDateField;
            }
            set
            {
                this.InvoiceDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumber
        {
            get
            {
                return this.InvoiceNumberField;
            }
            set
            {
                this.InvoiceNumberField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<ConnectPostbox.EArchiveInvoiceStatusForRecon> InvoiceStatus
        {
            get
            {
                return this.InvoiceStatusField;
            }
            set
            {
                this.InvoiceStatusField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uuid
        {
            get
            {
                return this.UuidField;
            }
            set
            {
                this.UuidField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "EArchiveInvoiceStatusForRecon", Namespace = "http://schemas.datacontract.org/2004/07/CommonLib")]
    public enum EArchiveInvoiceStatusForRecon : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUCCESS = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAULT = -1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        QUEUE = 1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "InvoiceType", Namespace = "http://schemas.datacontract.org/2004/07/CommonLib")]
    public enum InvoiceType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        EINVOICE = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        EARCHIVE = 1,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "eFaturaWebService.ResultType", Namespace = "http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    public partial class eFaturaWebServiceResultType : object
    {

        private System.Collections.Generic.List<string> outputListField;

        private int resultCodeField;

        private string resultMsgField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> outputList
        {
            get
            {
                return this.outputListField;
            }
            set
            {
                this.outputListField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int resultCode
        {
            get
            {
                return this.resultCodeField;
            }
            set
            {
                this.resultCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string resultMsg
        {
            get
            {
                return this.resultMsgField;
            }
            set
            {
                this.resultMsgField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DocumentStatusType", Namespace = "http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    public partial class DocumentStatusType : object
    {

        private int codeField;

        private System.DateTime currentDateField;

        private string descriptionField;

        private string envelopeIdField;

        private bool isCancelField;

        private int statusField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime currentDate
        {
            get
            {
                return this.currentDateField;
            }
            set
            {
                this.currentDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string envelopeId
        {
            get
            {
                return this.envelopeIdField;
            }
            set
            {
                this.envelopeIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isCancel
        {
            get
            {
                return this.isCancelField;
            }
            set
            {
                this.isCancelField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Document", Namespace = "http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    public partial class Document : object
    {

        private System.Collections.Generic.List<string> docInfoField;

        private string documentIdField;

        private string documentJSonField;

        private string documentUuidField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> docInfo
        {
            get
            {
                return this.docInfoField;
            }
            set
            {
                this.docInfoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documentId
        {
            get
            {
                return this.documentIdField;
            }
            set
            {
                this.documentIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documentJSon
        {
            get
            {
                return this.documentJSonField;
            }
            set
            {
                this.documentJSonField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documentUuid
        {
            get
            {
                return this.documentUuidField;
            }
            set
            {
                this.documentUuidField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GibUserType", Namespace = "http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    public partial class GibUserType : object
    {

        private int DespatchAdviceField;

        private System.Collections.Generic.List<ConnectPostbox.GibUserInfoType> DespatchAdviceGbListField;

        private System.Collections.Generic.List<ConnectPostbox.GibUserInfoType> DespatchAdvicePkListField;

        private string IdentifierField;

        private int InvoiceField;

        private System.Collections.Generic.List<ConnectPostbox.GibUserInfoType> InvoiceGbListField;

        private System.Collections.Generic.List<ConnectPostbox.GibUserInfoType> InvoicePkListField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DespatchAdvice
        {
            get
            {
                return this.DespatchAdviceField;
            }
            set
            {
                this.DespatchAdviceField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ConnectPostbox.GibUserInfoType> DespatchAdviceGbList
        {
            get
            {
                return this.DespatchAdviceGbListField;
            }
            set
            {
                this.DespatchAdviceGbListField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ConnectPostbox.GibUserInfoType> DespatchAdvicePkList
        {
            get
            {
                return this.DespatchAdvicePkListField;
            }
            set
            {
                this.DespatchAdvicePkListField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier
        {
            get
            {
                return this.IdentifierField;
            }
            set
            {
                this.IdentifierField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Invoice
        {
            get
            {
                return this.InvoiceField;
            }
            set
            {
                this.InvoiceField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ConnectPostbox.GibUserInfoType> InvoiceGbList
        {
            get
            {
                return this.InvoiceGbListField;
            }
            set
            {
                this.InvoiceGbListField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ConnectPostbox.GibUserInfoType> InvoicePkList
        {
            get
            {
                return this.InvoicePkListField;
            }
            set
            {
                this.InvoicePkListField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GibUserInfoType", Namespace = "http://schemas.datacontract.org/2004/07/eFaturaWebService")]
    public partial class GibUserInfoType : object
    {

        private string AliasField;

        private System.Nullable<System.DateTime> AliasCreationTimeField;

        private System.Nullable<System.DateTime> FirstCreationTimeField;

        private string IdentifierField;

        private string TitleField;

        private string TypeField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return this.AliasField;
            }
            set
            {
                this.AliasField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AliasCreationTime
        {
            get
            {
                return this.AliasCreationTimeField;
            }
            set
            {
                this.AliasCreationTimeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FirstCreationTime
        {
            get
            {
                return this.FirstCreationTimeField;
            }
            set
            {
                this.FirstCreationTimeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identifier
        {
            get
            {
                return this.IdentifierField;
            }
            set
            {
                this.IdentifierField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "ConnectPostbox.IPostBoxService")]
    public interface IPostBoxService
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/Ping", ReplyAction = "http://tempuri.org/IPostBoxService/PingResponse")]
        string Ping();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/Ping", ReplyAction = "http://tempuri.org/IPostBoxService/PingResponse")]
        System.Threading.Tasks.Task<string> PingAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/ALive", ReplyAction = "http://tempuri.org/IPostBoxService/ALiveResponse")]
        string ALive(string key);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/ALive", ReplyAction = "http://tempuri.org/IPostBoxService/ALiveResponse")]
        System.Threading.Tasks.Task<string> ALiveAsync(string key);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/Login", ReplyAction = "http://tempuri.org/IPostBoxService/LoginResponse")]
        ConnectPostbox.LoginResponse Login(ConnectPostbox.LoginRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/Login", ReplyAction = "http://tempuri.org/IPostBoxService/LoginResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.LoginResponse> LoginAsync(ConnectPostbox.LoginRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/Logout", ReplyAction = "http://tempuri.org/IPostBoxService/LogoutResponse")]
        void Logout(string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/Logout", ReplyAction = "http://tempuri.org/IPostBoxService/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync(string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/sendEnvelope", ReplyAction = "http://tempuri.org/IPostBoxService/sendEnvelopeResponse")]
        bool sendEnvelope(ConnectPostbox.DocumentType envelope, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/sendEnvelope", ReplyAction = "http://tempuri.org/IPostBoxService/sendEnvelopeResponse")]
        System.Threading.Tasks.Task<bool> sendEnvelopeAsync(ConnectPostbox.DocumentType envelope, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/sendInvoice", ReplyAction = "http://tempuri.org/IPostBoxService/sendInvoiceResponse")]
        bool sendInvoice(ConnectPostbox.DocumentType invoice, string alias, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/sendInvoice", ReplyAction = "http://tempuri.org/IPostBoxService/sendInvoiceResponse")]
        System.Threading.Tasks.Task<bool> sendInvoiceAsync(ConnectPostbox.DocumentType invoice, string alias, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/sendApplicationResponse", ReplyAction = "http://tempuri.org/IPostBoxService/sendApplicationResponseResponse")]
        bool sendApplicationResponse(ConnectPostbox.DocumentType appResp, string alias, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/sendApplicationResponse", ReplyAction = "http://tempuri.org/IPostBoxService/sendApplicationResponseResponse")]
        System.Threading.Tasks.Task<bool> sendApplicationResponseAsync(ConnectPostbox.DocumentType appResp, string alias, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/sendEnvelopeEx", ReplyAction = "http://tempuri.org/IPostBoxService/sendEnvelopeExResponse")]
        int sendEnvelopeEx(ConnectPostbox.DocumentType envelope, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/sendEnvelopeEx", ReplyAction = "http://tempuri.org/IPostBoxService/sendEnvelopeExResponse")]
        System.Threading.Tasks.Task<int> sendEnvelopeExAsync(ConnectPostbox.DocumentType envelope, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/sendInvoiceEx", ReplyAction = "http://tempuri.org/IPostBoxService/sendInvoiceExResponse")]
        int sendInvoiceEx(ConnectPostbox.DocumentType invoice, string alias, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/sendInvoiceEx", ReplyAction = "http://tempuri.org/IPostBoxService/sendInvoiceExResponse")]
        System.Threading.Tasks.Task<int> sendInvoiceExAsync(ConnectPostbox.DocumentType invoice, string alias, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/sendSignedInvoice", ReplyAction = "http://tempuri.org/IPostBoxService/sendSignedInvoiceResponse")]
        int sendSignedInvoice(ConnectPostbox.DocumentType invoice, string alias, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/sendSignedInvoice", ReplyAction = "http://tempuri.org/IPostBoxService/sendSignedInvoiceResponse")]
        System.Threading.Tasks.Task<int> sendSignedInvoiceAsync(ConnectPostbox.DocumentType invoice, string alias, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/sendApplicationResponseEx", ReplyAction = "http://tempuri.org/IPostBoxService/sendApplicationResponseExResponse")]
        int sendApplicationResponseEx(ConnectPostbox.DocumentType appResp, string alias, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/sendApplicationResponseEx", ReplyAction = "http://tempuri.org/IPostBoxService/sendApplicationResponseExResponse")]
        System.Threading.Tasks.Task<int> sendApplicationResponseExAsync(ConnectPostbox.DocumentType appResp, string alias, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/sendEArchiveDocument", ReplyAction = "http://tempuri.org/IPostBoxService/sendEArchiveDocumentResponse")]
        int sendEArchiveDocument(ConnectPostbox.DocumentType document, ConnectPostbox.EArchiveDocumentTypes docType, bool isSigned, string sessionID, string xsltUuid);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/sendEArchiveDocument", ReplyAction = "http://tempuri.org/IPostBoxService/sendEArchiveDocumentResponse")]
        System.Threading.Tasks.Task<int> sendEArchiveDocumentAsync(ConnectPostbox.DocumentType document, ConnectPostbox.EArchiveDocumentTypes docType, bool isSigned, string sessionID, string xsltUuid);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/receiveDocument", ReplyAction = "http://tempuri.org/IPostBoxService/receiveDocumentResponse")]
        ConnectPostbox.receiveDocumentResponse receiveDocument(ConnectPostbox.receiveDocumentRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/receiveDocument", ReplyAction = "http://tempuri.org/IPostBoxService/receiveDocumentResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.receiveDocumentResponse> receiveDocumentAsync(ConnectPostbox.receiveDocumentRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/receiveDone", ReplyAction = "http://tempuri.org/IPostBoxService/receiveDoneResponse")]
        int receiveDone(string fileID, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/receiveDone", ReplyAction = "http://tempuri.org/IPostBoxService/receiveDoneResponse")]
        System.Threading.Tasks.Task<int> receiveDoneAsync(string fileID, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/receiveInvoice", ReplyAction = "http://tempuri.org/IPostBoxService/receiveInvoiceResponse")]
        ConnectPostbox.receiveInvoiceResponse receiveInvoice(ConnectPostbox.receiveInvoiceRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/receiveInvoice", ReplyAction = "http://tempuri.org/IPostBoxService/receiveInvoiceResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.receiveInvoiceResponse> receiveInvoiceAsync(ConnectPostbox.receiveInvoiceRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/receiveInvoiceDone", ReplyAction = "http://tempuri.org/IPostBoxService/receiveInvoiceDoneResponse")]
        int receiveInvoiceDone(string uuid, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/receiveInvoiceDone", ReplyAction = "http://tempuri.org/IPostBoxService/receiveInvoiceDoneResponse")]
        System.Threading.Tasks.Task<int> receiveInvoiceDoneAsync(string uuid, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/receiveApplicationResponse", ReplyAction = "http://tempuri.org/IPostBoxService/receiveApplicationResponseResponse")]
        ConnectPostbox.receiveApplicationResponseResponse receiveApplicationResponse(ConnectPostbox.receiveApplicationResponseRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/receiveApplicationResponse", ReplyAction = "http://tempuri.org/IPostBoxService/receiveApplicationResponseResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.receiveApplicationResponseResponse> receiveApplicationResponseAsync(ConnectPostbox.receiveApplicationResponseRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/receiveApplicationResponseDone", ReplyAction = "http://tempuri.org/IPostBoxService/receiveApplicationResponseDoneResponse")]
        int receiveApplicationResponseDone(string uuid, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/receiveApplicationResponseDone", ReplyAction = "http://tempuri.org/IPostBoxService/receiveApplicationResponseDoneResponse")]
        System.Threading.Tasks.Task<int> receiveApplicationResponseDoneAsync(string uuid, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getApplicationResponse", ReplyAction = "http://tempuri.org/IPostBoxService/getApplicationResponseResponse")]
        ConnectPostbox.getApplicationResponseResponse getApplicationResponse(ConnectPostbox.getApplicationResponseRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getApplicationResponse", ReplyAction = "http://tempuri.org/IPostBoxService/getApplicationResponseResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.getApplicationResponseResponse> getApplicationResponseAsync(ConnectPostbox.getApplicationResponseRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getInvoiceStatus", ReplyAction = "http://tempuri.org/IPostBoxService/getInvoiceStatusResponse")]
        ConnectPostbox.getInvoiceStatusResponse getInvoiceStatus(ConnectPostbox.getInvoiceStatusRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getInvoiceStatus", ReplyAction = "http://tempuri.org/IPostBoxService/getInvoiceStatusResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.getInvoiceStatusResponse> getInvoiceStatusAsync(ConnectPostbox.getInvoiceStatusRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getAppRespStatus", ReplyAction = "http://tempuri.org/IPostBoxService/getAppRespStatusResponse")]
        ConnectPostbox.getAppRespStatusResponse getAppRespStatus(ConnectPostbox.getAppRespStatusRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getAppRespStatus", ReplyAction = "http://tempuri.org/IPostBoxService/getAppRespStatusResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.getAppRespStatusResponse> getAppRespStatusAsync(ConnectPostbox.getAppRespStatusRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getEnvelopeList", ReplyAction = "http://tempuri.org/IPostBoxService/getEnvelopeListResponse")]
        System.Collections.Generic.List<string> getEnvelopeList(System.DateTime beginDate, System.DateTime endDate, ConnectPostbox.SendRecvType opType, string sessionID, ConnectPostbox.PostBoxDateType dateBy);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getEnvelopeList", ReplyAction = "http://tempuri.org/IPostBoxService/getEnvelopeListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> getEnvelopeListAsync(System.DateTime beginDate, System.DateTime endDate, ConnectPostbox.SendRecvType opType, string sessionID, ConnectPostbox.PostBoxDateType dateBy);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getEnvelope", ReplyAction = "http://tempuri.org/IPostBoxService/getEnvelopeResponse")]
        ConnectPostbox.DocumentType getEnvelope(string envelopeID, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getEnvelope", ReplyAction = "http://tempuri.org/IPostBoxService/getEnvelopeResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.DocumentType> getEnvelopeAsync(string envelopeID, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getInvoiceList", ReplyAction = "http://tempuri.org/IPostBoxService/getInvoiceListResponse")]
        System.Collections.Generic.List<string> getInvoiceList(System.DateTime beginDate, System.DateTime endDate, ConnectPostbox.SendRecvType opType, string sessionID, ConnectPostbox.InvoiceDateType dateBy);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getInvoiceList", ReplyAction = "http://tempuri.org/IPostBoxService/getInvoiceListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> getInvoiceListAsync(System.DateTime beginDate, System.DateTime endDate, ConnectPostbox.SendRecvType opType, string sessionID, ConnectPostbox.InvoiceDateType dateBy);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getInvoice", ReplyAction = "http://tempuri.org/IPostBoxService/getInvoiceResponse")]
        ConnectPostbox.DocumentType getInvoice(string invoiceID, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getInvoice", ReplyAction = "http://tempuri.org/IPostBoxService/getInvoiceResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.DocumentType> getInvoiceAsync(string invoiceID, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getUserList", ReplyAction = "http://tempuri.org/IPostBoxService/getUserListResponse")]
        ConnectPostbox.DocumentType getUserList(ConnectPostbox.LoginType login, ConnectPostbox.UserListType listType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getUserList", ReplyAction = "http://tempuri.org/IPostBoxService/getUserListResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.DocumentType> getUserListAsync(ConnectPostbox.LoginType login, ConnectPostbox.UserListType listType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getUserListNew", ReplyAction = "http://tempuri.org/IPostBoxService/getUserListNewResponse")]
        ConnectPostbox.DocumentType getUserListNew(ConnectPostbox.LoginType login, ConnectPostbox.UserListType listType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getUserListNew", ReplyAction = "http://tempuri.org/IPostBoxService/getUserListNewResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.DocumentType> getUserListNewAsync(ConnectPostbox.LoginType login, ConnectPostbox.UserListType listType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getApprovalFlowList", ReplyAction = "http://tempuri.org/IPostBoxService/getApprovalFlowListResponse")]
        ConnectPostbox.getApprovalFlowListResponse getApprovalFlowList(ConnectPostbox.getApprovalFlowListRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getApprovalFlowList", ReplyAction = "http://tempuri.org/IPostBoxService/getApprovalFlowListResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.getApprovalFlowListResponse> getApprovalFlowListAsync(ConnectPostbox.getApprovalFlowListRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/setApprovalFlowId", ReplyAction = "http://tempuri.org/IPostBoxService/setApprovalFlowIdResponse")]
        bool setApprovalFlowId(string invoiceUuid, int flowId, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/setApprovalFlowId", ReplyAction = "http://tempuri.org/IPostBoxService/setApprovalFlowIdResponse")]
        System.Threading.Tasks.Task<bool> setApprovalFlowIdAsync(string invoiceUuid, int flowId, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getApprovalFlowRes", ReplyAction = "http://tempuri.org/IPostBoxService/getApprovalFlowResResponse")]
        ConnectPostbox.getApprovalFlowResResponse getApprovalFlowRes(ConnectPostbox.getApprovalFlowResRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getApprovalFlowRes", ReplyAction = "http://tempuri.org/IPostBoxService/getApprovalFlowResResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.getApprovalFlowResResponse> getApprovalFlowResAsync(ConnectPostbox.getApprovalFlowResRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getDocumentStatus", ReplyAction = "http://tempuri.org/IPostBoxService/getDocumentStatusResponse")]
        ConnectPostbox.getDocumentStatusResponse getDocumentStatus(ConnectPostbox.getDocumentStatusRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getDocumentStatus", ReplyAction = "http://tempuri.org/IPostBoxService/getDocumentStatusResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.getDocumentStatusResponse> getDocumentStatusAsync(ConnectPostbox.getDocumentStatusRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getDocumentStatusEx", ReplyAction = "http://tempuri.org/IPostBoxService/getDocumentStatusExResponse")]
        ConnectPostbox.getDocumentStatusExResponse getDocumentStatusEx(ConnectPostbox.getDocumentStatusExRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getDocumentStatusEx", ReplyAction = "http://tempuri.org/IPostBoxService/getDocumentStatusExResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.getDocumentStatusExResponse> getDocumentStatusExAsync(ConnectPostbox.getDocumentStatusExRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getEArchiveXslt", ReplyAction = "http://tempuri.org/IPostBoxService/getEArchiveXsltResponse")]
        ConnectPostbox.getEArchiveXsltResponse getEArchiveXslt(ConnectPostbox.getEArchiveXsltRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getEArchiveXslt", ReplyAction = "http://tempuri.org/IPostBoxService/getEArchiveXsltResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.getEArchiveXsltResponse> getEArchiveXsltAsync(ConnectPostbox.getEArchiveXsltRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getInvoiceApplicationResponse", ReplyAction = "http://tempuri.org/IPostBoxService/getInvoiceApplicationResponseResponse")]
        int getInvoiceApplicationResponse(string sessionID, string uuid);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getInvoiceApplicationResponse", ReplyAction = "http://tempuri.org/IPostBoxService/getInvoiceApplicationResponseResponse")]
        System.Threading.Tasks.Task<int> getInvoiceApplicationResponseAsync(string sessionID, string uuid);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getInvoiceResponseData", ReplyAction = "http://tempuri.org/IPostBoxService/getInvoiceResponseDataResponse")]
        ConnectPostbox.getInvoiceResponseDataResponse getInvoiceResponseData(ConnectPostbox.getInvoiceResponseDataRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getInvoiceResponseData", ReplyAction = "http://tempuri.org/IPostBoxService/getInvoiceResponseDataResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.getInvoiceResponseDataResponse> getInvoiceResponseDataAsync(ConnectPostbox.getInvoiceResponseDataRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/setApplicationResponseOption", ReplyAction = "http://tempuri.org/IPostBoxService/setApplicationResponseOptionResponse")]
        bool setApplicationResponseOption(string sessionID, int option);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/setApplicationResponseOption", ReplyAction = "http://tempuri.org/IPostBoxService/setApplicationResponseOptionResponse")]
        System.Threading.Tasks.Task<bool> setApplicationResponseOptionAsync(string sessionID, int option);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getEArchiveInvoicePdfData", ReplyAction = "http://tempuri.org/IPostBoxService/getEArchiveInvoicePdfDataResponse")]
        ConnectPostbox.getEArchiveInvoicePdfDataResponse getEArchiveInvoicePdfData(ConnectPostbox.getEArchiveInvoicePdfDataRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getEArchiveInvoicePdfData", ReplyAction = "http://tempuri.org/IPostBoxService/getEArchiveInvoicePdfDataResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.getEArchiveInvoicePdfDataResponse> getEArchiveInvoicePdfDataAsync(ConnectPostbox.getEArchiveInvoicePdfDataRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getDocumentData", ReplyAction = "http://tempuri.org/IPostBoxService/getDocumentDataResponse")]
        ConnectPostbox.DocumentType getDocumentData(string sessionID, string uuid, ConnectPostbox.GetDocumentType docType, ConnectPostbox.DocumentDataType dataType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getDocumentData", ReplyAction = "http://tempuri.org/IPostBoxService/getDocumentDataResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.DocumentType> getDocumentDataAsync(string sessionID, string uuid, ConnectPostbox.GetDocumentType docType, ConnectPostbox.DocumentDataType dataType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getReconciliationList", ReplyAction = "http://tempuri.org/IPostBoxService/getReconciliationListResponse")]
        ConnectPostbox.DocumentType getReconciliationList(string sessionID, System.DateTime begDate, System.DateTime endDate, string begNum, string endNum, ConnectPostbox.SendRecvType opType, int docType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/getReconciliationList", ReplyAction = "http://tempuri.org/IPostBoxService/getReconciliationListResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.DocumentType> getReconciliationListAsync(string sessionID, System.DateTime begDate, System.DateTime endDate, string begNum, string endNum, ConnectPostbox.SendRecvType opType, int docType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/sendReconciliationReport", ReplyAction = "http://tempuri.org/IPostBoxService/sendReconciliationReportResponse")]
        int sendReconciliationReport(ConnectPostbox.DocumentType report, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/sendReconciliationReport", ReplyAction = "http://tempuri.org/IPostBoxService/sendReconciliationReportResponse")]
        System.Threading.Tasks.Task<int> sendReconciliationReportAsync(ConnectPostbox.DocumentType report, string sessionID);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/createElementId", ReplyAction = "http://tempuri.org/IPostBoxService/createElementIdResponse")]
        string createElementId(string sessionID, string year, string invoicePrefix, ConnectPostbox.GetDocumentType docType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/createElementId", ReplyAction = "http://tempuri.org/IPostBoxService/createElementIdResponse")]
        System.Threading.Tasks.Task<string> createElementIdAsync(string sessionID, string year, string invoicePrefix, ConnectPostbox.GetDocumentType docType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/cancelEArchiveInvoice", ReplyAction = "http://tempuri.org/IPostBoxService/cancelEArchiveInvoiceResponse")]
        int cancelEArchiveInvoice(string sessionID, string uuid, string elementId);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/cancelEArchiveInvoice", ReplyAction = "http://tempuri.org/IPostBoxService/cancelEArchiveInvoiceResponse")]
        System.Threading.Tasks.Task<int> cancelEArchiveInvoiceAsync(string sessionID, string uuid, string elementId);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/SendEArchiveListForReconcilition", ReplyAction = "http://tempuri.org/IPostBoxService/SendEArchiveListForReconcilitionResponse")]
        int SendEArchiveListForReconcilition(System.DateTime beginDate, System.DateTime endDate, string sessionID, System.Collections.Generic.List<ConnectPostbox.ReconInvoiceType> invoiceList, ConnectPostbox.InvoiceType invoiceType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/SendEArchiveListForReconcilition", ReplyAction = "http://tempuri.org/IPostBoxService/SendEArchiveListForReconcilitionResponse")]
        System.Threading.Tasks.Task<int> SendEArchiveListForReconcilitionAsync(System.DateTime beginDate, System.DateTime endDate, string sessionID, System.Collections.Generic.List<ConnectPostbox.ReconInvoiceType> invoiceList, ConnectPostbox.InvoiceType invoiceType);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/SendDocument", ReplyAction = "http://tempuri.org/IPostBoxService/SendDocumentResponse")]
        ConnectPostbox.SendDocumentResponse SendDocument(ConnectPostbox.SendDocumentRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/SendDocument", ReplyAction = "http://tempuri.org/IPostBoxService/SendDocumentResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.SendDocumentResponse> SendDocumentAsync(ConnectPostbox.SendDocumentRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/GetDocument", ReplyAction = "http://tempuri.org/IPostBoxService/GetDocumentResponse")]
        ConnectPostbox.GetDocumentResponse GetDocument(ConnectPostbox.GetDocumentRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/GetDocument", ReplyAction = "http://tempuri.org/IPostBoxService/GetDocumentResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.GetDocumentResponse> GetDocumentAsync(ConnectPostbox.GetDocumentRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/GetDocumentDone", ReplyAction = "http://tempuri.org/IPostBoxService/GetDocumentDoneResponse")]
        ConnectPostbox.eFaturaWebServiceResultType GetDocumentDone(string sessionID, string uuid, System.Collections.Generic.List<string> paramList);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/GetDocumentDone", ReplyAction = "http://tempuri.org/IPostBoxService/GetDocumentDoneResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.eFaturaWebServiceResultType> GetDocumentDoneAsync(string sessionID, string uuid, System.Collections.Generic.List<string> paramList);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/GetDocumentStatus", ReplyAction = "http://tempuri.org/IPostBoxService/GetDocumentStatusResponse")]
        ConnectPostbox.GetDocumentStatusResponse1 GetDocumentStatus(ConnectPostbox.GetDocumentStatusRequest1 request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/GetDocumentStatus", ReplyAction = "http://tempuri.org/IPostBoxService/GetDocumentStatusResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.GetDocumentStatusResponse1> GetDocumentStatusAsync(ConnectPostbox.GetDocumentStatusRequest1 request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/GetDocumentData", ReplyAction = "http://tempuri.org/IPostBoxService/GetDocumentDataResponse")]
        ConnectPostbox.GetDocumentDataResponse GetDocumentData(ConnectPostbox.GetDocumentDataRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/GetDocumentData", ReplyAction = "http://tempuri.org/IPostBoxService/GetDocumentDataResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.GetDocumentDataResponse> GetDocumentDataAsync(ConnectPostbox.GetDocumentDataRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/GetDocumentList", ReplyAction = "http://tempuri.org/IPostBoxService/GetDocumentListResponse")]
        ConnectPostbox.GetDocumentListResponse GetDocumentList(ConnectPostbox.GetDocumentListRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/GetDocumentList", ReplyAction = "http://tempuri.org/IPostBoxService/GetDocumentListResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.GetDocumentListResponse> GetDocumentListAsync(ConnectPostbox.GetDocumentListRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/GetValidateGIBUser", ReplyAction = "http://tempuri.org/IPostBoxService/GetValidateGIBUserResponse")]
        ConnectPostbox.eFaturaWebServiceResultType GetValidateGIBUser(string sessionID, System.Collections.Generic.List<string> paramList);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/GetValidateGIBUser", ReplyAction = "http://tempuri.org/IPostBoxService/GetValidateGIBUserResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.eFaturaWebServiceResultType> GetValidateGIBUserAsync(string sessionID, System.Collections.Generic.List<string> paramList);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/CheckGibUser", ReplyAction = "http://tempuri.org/IPostBoxService/CheckGibUserResponse")]
        ConnectPostbox.CheckGibUserResponse CheckGibUser(ConnectPostbox.CheckGibUserRequest request);

        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPostBoxService/CheckGibUser", ReplyAction = "http://tempuri.org/IPostBoxService/CheckGibUserResponse")]
        System.Threading.Tasks.Task<ConnectPostbox.CheckGibUserResponse> CheckGibUserAsync(ConnectPostbox.CheckGibUserRequest request);
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "Login", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class LoginRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public ConnectPostbox.LoginType login;

        public LoginRequest()
        {
        }

        public LoginRequest(ConnectPostbox.LoginType login)
        {
            this.login = login;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "LoginResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class LoginResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool LoginResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public string sessionID;

        public LoginResponse()
        {
        }

        public LoginResponse(bool LoginResult, string sessionID)
        {
            this.LoginResult = LoginResult;
            this.sessionID = sessionID;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "receiveDocument", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class receiveDocumentRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string sessionID;

        public receiveDocumentRequest()
        {
        }

        public receiveDocumentRequest(string sessionID)
        {
            this.sessionID = sessionID;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "receiveDocumentResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class receiveDocumentResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool receiveDocumentResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public ConnectPostbox.DocumentType document;

        public receiveDocumentResponse()
        {
        }

        public receiveDocumentResponse(bool receiveDocumentResult, ConnectPostbox.DocumentType document)
        {
            this.receiveDocumentResult = receiveDocumentResult;
            this.document = document;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "receiveInvoice", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class receiveInvoiceRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string sessionID;

        public receiveInvoiceRequest()
        {
        }

        public receiveInvoiceRequest(string sessionID)
        {
            this.sessionID = sessionID;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "receiveInvoiceResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class receiveInvoiceResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool receiveInvoiceResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public ConnectPostbox.ElementType document;

        public receiveInvoiceResponse()
        {
        }

        public receiveInvoiceResponse(bool receiveInvoiceResult, ConnectPostbox.ElementType document)
        {
            this.receiveInvoiceResult = receiveInvoiceResult;
            this.document = document;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "receiveApplicationResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class receiveApplicationResponseRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string sessionID;

        public receiveApplicationResponseRequest()
        {
        }

        public receiveApplicationResponseRequest(string sessionID)
        {
            this.sessionID = sessionID;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "receiveApplicationResponseResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class receiveApplicationResponseResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool receiveApplicationResponseResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public ConnectPostbox.ElementType document;

        public receiveApplicationResponseResponse()
        {
        }

        public receiveApplicationResponseResponse(bool receiveApplicationResponseResult, ConnectPostbox.ElementType document)
        {
            this.receiveApplicationResponseResult = receiveApplicationResponseResult;
            this.document = document;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getApplicationResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getApplicationResponseRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string envelopeID;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public string sessionID;

        public getApplicationResponseRequest()
        {
        }

        public getApplicationResponseRequest(string envelopeID, string sessionID)
        {
            this.envelopeID = envelopeID;
            this.sessionID = sessionID;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getApplicationResponseResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getApplicationResponseResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool getApplicationResponseResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public ConnectPostbox.DocumentType document;

        public getApplicationResponseResponse()
        {
        }

        public getApplicationResponseResponse(bool getApplicationResponseResult, ConnectPostbox.DocumentType document)
        {
            this.getApplicationResponseResult = getApplicationResponseResult;
            this.document = document;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getInvoiceStatus", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getInvoiceStatusRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string uuid;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public string sessionID;

        public getInvoiceStatusRequest()
        {
        }

        public getInvoiceStatusRequest(string uuid, string sessionID)
        {
            this.uuid = uuid;
            this.sessionID = sessionID;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getInvoiceStatusResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getInvoiceStatusResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool getInvoiceStatusResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public ConnectPostbox.InvoiceStatus status;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        public string statusDescription;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 3)]
        public string envelopeId;

        public getInvoiceStatusResponse()
        {
        }

        public getInvoiceStatusResponse(bool getInvoiceStatusResult, ConnectPostbox.InvoiceStatus status, string statusDescription, string envelopeId)
        {
            this.getInvoiceStatusResult = getInvoiceStatusResult;
            this.status = status;
            this.statusDescription = statusDescription;
            this.envelopeId = envelopeId;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getAppRespStatus", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getAppRespStatusRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string uuid;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public string sessionID;

        public getAppRespStatusRequest()
        {
        }

        public getAppRespStatusRequest(string uuid, string sessionID)
        {
            this.uuid = uuid;
            this.sessionID = sessionID;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getAppRespStatusResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getAppRespStatusResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool getAppRespStatusResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public ConnectPostbox.AppRespStatus status;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        public string statusDescription;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 3)]
        public string envelopeId;

        public getAppRespStatusResponse()
        {
        }

        public getAppRespStatusResponse(bool getAppRespStatusResult, ConnectPostbox.AppRespStatus status, string statusDescription, string envelopeId)
        {
            this.getAppRespStatusResult = getAppRespStatusResult;
            this.status = status;
            this.statusDescription = statusDescription;
            this.envelopeId = envelopeId;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getApprovalFlowList", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getApprovalFlowListRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string sessionID;

        public getApprovalFlowListRequest()
        {
        }

        public getApprovalFlowListRequest(string sessionID)
        {
            this.sessionID = sessionID;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getApprovalFlowListResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getApprovalFlowListResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool getApprovalFlowListResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public ConnectPostbox.DocumentType document;

        public getApprovalFlowListResponse()
        {
        }

        public getApprovalFlowListResponse(bool getApprovalFlowListResult, ConnectPostbox.DocumentType document)
        {
            this.getApprovalFlowListResult = getApprovalFlowListResult;
            this.document = document;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getApprovalFlowRes", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getApprovalFlowResRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string invoiceUuid;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public int flowId;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        public string sessionID;

        public getApprovalFlowResRequest()
        {
        }

        public getApprovalFlowResRequest(string invoiceUuid, int flowId, string sessionID)
        {
            this.invoiceUuid = invoiceUuid;
            this.flowId = flowId;
            this.sessionID = sessionID;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getApprovalFlowResResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getApprovalFlowResResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool getApprovalFlowResResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public int flowRes;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        public int flowAction;

        public getApprovalFlowResResponse()
        {
        }

        public getApprovalFlowResResponse(bool getApprovalFlowResResult, int flowRes, int flowAction)
        {
            this.getApprovalFlowResResult = getApprovalFlowResResult;
            this.flowRes = flowRes;
            this.flowAction = flowAction;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getDocumentStatus", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getDocumentStatusRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public int docType;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public string uuid;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        public int relRef;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 3)]
        public string sessionID;

        public getDocumentStatusRequest()
        {
        }

        public getDocumentStatusRequest(int docType, string uuid, int relRef, string sessionID)
        {
            this.docType = docType;
            this.uuid = uuid;
            this.relRef = relRef;
            this.sessionID = sessionID;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getDocumentStatusResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getDocumentStatusResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public int respStatus;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public int responseCode;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        public string responseDesc;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 3)]
        public string envelopeId;

        public getDocumentStatusResponse()
        {
        }

        public getDocumentStatusResponse(int respStatus, int responseCode, string responseDesc, string envelopeId)
        {
            this.respStatus = respStatus;
            this.responseCode = responseCode;
            this.responseDesc = responseDesc;
            this.envelopeId = envelopeId;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getDocumentStatusEx", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getDocumentStatusExRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public int docType;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public string uuid;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        public int relRef;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 3)]
        public string sessionID;

        public getDocumentStatusExRequest()
        {
        }

        public getDocumentStatusExRequest(int docType, string uuid, int relRef, string sessionID)
        {
            this.docType = docType;
            this.uuid = uuid;
            this.relRef = relRef;
            this.sessionID = sessionID;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getDocumentStatusExResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getDocumentStatusExResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public int respStatus;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public int responseCode;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        public string responseDesc;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 3)]
        public string envelopeId;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 4)]
        public System.DateTime currentDate;

        public getDocumentStatusExResponse()
        {
        }

        public getDocumentStatusExResponse(int respStatus, int responseCode, string responseDesc, string envelopeId, System.DateTime currentDate)
        {
            this.respStatus = respStatus;
            this.responseCode = responseCode;
            this.responseDesc = responseDesc;
            this.envelopeId = envelopeId;
            this.currentDate = currentDate;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getEArchiveXslt", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getEArchiveXsltRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string sessionID;

        public getEArchiveXsltRequest()
        {
        }

        public getEArchiveXsltRequest(string sessionID)
        {
            this.sessionID = sessionID;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getEArchiveXsltResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getEArchiveXsltResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool getEArchiveXsltResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public ConnectPostbox.DocumentType document;

        public getEArchiveXsltResponse()
        {
        }

        public getEArchiveXsltResponse(bool getEArchiveXsltResult, ConnectPostbox.DocumentType document)
        {
            this.getEArchiveXsltResult = getEArchiveXsltResult;
            this.document = document;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getInvoiceResponseData", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getInvoiceResponseDataRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string sessionID;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public string uuid;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        public string responseType;

        public getInvoiceResponseDataRequest()
        {
        }

        public getInvoiceResponseDataRequest(string sessionID, string uuid, string responseType)
        {
            this.sessionID = sessionID;
            this.uuid = uuid;
            this.responseType = responseType;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getInvoiceResponseDataResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getInvoiceResponseDataResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool getInvoiceResponseDataResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public ConnectPostbox.DocumentType document;

        public getInvoiceResponseDataResponse()
        {
        }

        public getInvoiceResponseDataResponse(bool getInvoiceResponseDataResult, ConnectPostbox.DocumentType document)
        {
            this.getInvoiceResponseDataResult = getInvoiceResponseDataResult;
            this.document = document;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getEArchiveInvoicePdfData", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getEArchiveInvoicePdfDataRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string sessionID;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public string uuid;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        public bool allInvoicesOrJustSigned;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 3)]
        public bool isCanceled;

        public getEArchiveInvoicePdfDataRequest()
        {
        }

        public getEArchiveInvoicePdfDataRequest(string sessionID, string uuid, bool allInvoicesOrJustSigned, bool isCanceled)
        {
            this.sessionID = sessionID;
            this.uuid = uuid;
            this.allInvoicesOrJustSigned = allInvoicesOrJustSigned;
            this.isCanceled = isCanceled;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "getEArchiveInvoicePdfDataResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class getEArchiveInvoicePdfDataResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public bool getEArchiveInvoicePdfDataResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public byte[] pdfData;

        public getEArchiveInvoicePdfDataResponse()
        {
        }

        public getEArchiveInvoicePdfDataResponse(bool getEArchiveInvoicePdfDataResult, byte[] pdfData)
        {
            this.getEArchiveInvoicePdfDataResult = getEArchiveInvoicePdfDataResult;
            this.pdfData = pdfData;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "SendDocument", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class SendDocumentRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string sessionID;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public System.Collections.Generic.List<string> paramList;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        public ConnectPostbox.DocumentType document;

        public SendDocumentRequest()
        {
        }

        public SendDocumentRequest(string sessionID, System.Collections.Generic.List<string> paramList, ConnectPostbox.DocumentType document)
        {
            this.sessionID = sessionID;
            this.paramList = paramList;
            this.document = document;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "SendDocumentResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class SendDocumentResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public ConnectPostbox.eFaturaWebServiceResultType SendDocumentResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public int refId;

        public SendDocumentResponse()
        {
        }

        public SendDocumentResponse(ConnectPostbox.eFaturaWebServiceResultType SendDocumentResult, int refId)
        {
            this.SendDocumentResult = SendDocumentResult;
            this.refId = refId;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetDocument", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetDocumentRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string sessionID;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public System.Collections.Generic.List<string> paramList;

        public GetDocumentRequest()
        {
        }

        public GetDocumentRequest(string sessionID, System.Collections.Generic.List<string> paramList)
        {
            this.sessionID = sessionID;
            this.paramList = paramList;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetDocumentResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetDocumentResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public ConnectPostbox.eFaturaWebServiceResultType GetDocumentResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public ConnectPostbox.ElementType document;

        public GetDocumentResponse()
        {
        }

        public GetDocumentResponse(ConnectPostbox.eFaturaWebServiceResultType GetDocumentResult, ConnectPostbox.ElementType document)
        {
            this.GetDocumentResult = GetDocumentResult;
            this.document = document;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetDocumentStatus", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetDocumentStatusRequest1
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string sessionID;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public string uuid;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        public System.Collections.Generic.List<string> paramList;

        public GetDocumentStatusRequest1()
        {
        }

        public GetDocumentStatusRequest1(string sessionID, string uuid, System.Collections.Generic.List<string> paramList)
        {
            this.sessionID = sessionID;
            this.uuid = uuid;
            this.paramList = paramList;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetDocumentStatusResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetDocumentStatusResponse1
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public ConnectPostbox.eFaturaWebServiceResultType GetDocumentStatusResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public ConnectPostbox.DocumentStatusType statusInfo;

        public GetDocumentStatusResponse1()
        {
        }

        public GetDocumentStatusResponse1(ConnectPostbox.eFaturaWebServiceResultType GetDocumentStatusResult, ConnectPostbox.DocumentStatusType statusInfo)
        {
            this.GetDocumentStatusResult = GetDocumentStatusResult;
            this.statusInfo = statusInfo;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetDocumentData", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetDocumentDataRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string sessionID;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public string uuid;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 2)]
        public System.Collections.Generic.List<string> paramList;

        public GetDocumentDataRequest()
        {
        }

        public GetDocumentDataRequest(string sessionID, string uuid, System.Collections.Generic.List<string> paramList)
        {
            this.sessionID = sessionID;
            this.uuid = uuid;
            this.paramList = paramList;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetDocumentDataResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetDocumentDataResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public ConnectPostbox.eFaturaWebServiceResultType GetDocumentDataResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public ConnectPostbox.DocumentType document;

        public GetDocumentDataResponse()
        {
        }

        public GetDocumentDataResponse(ConnectPostbox.eFaturaWebServiceResultType GetDocumentDataResult, ConnectPostbox.DocumentType document)
        {
            this.GetDocumentDataResult = GetDocumentDataResult;
            this.document = document;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetDocumentList", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetDocumentListRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string sessionID;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public System.Collections.Generic.List<string> paramList;

        public GetDocumentListRequest()
        {
        }

        public GetDocumentListRequest(string sessionID, System.Collections.Generic.List<string> paramList)
        {
            this.sessionID = sessionID;
            this.paramList = paramList;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "GetDocumentListResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class GetDocumentListResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public ConnectPostbox.eFaturaWebServiceResultType GetDocumentListResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public System.Collections.Generic.List<ConnectPostbox.Document> docList;

        public GetDocumentListResponse()
        {
        }

        public GetDocumentListResponse(ConnectPostbox.eFaturaWebServiceResultType GetDocumentListResult, System.Collections.Generic.List<ConnectPostbox.Document> docList)
        {
            this.GetDocumentListResult = GetDocumentListResult;
            this.docList = docList;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "CheckGibUser", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class CheckGibUserRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public string sessionID;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public System.Collections.Generic.List<string> vknTcknList;

        public CheckGibUserRequest()
        {
        }

        public CheckGibUserRequest(string sessionID, System.Collections.Generic.List<string> vknTcknList)
        {
            this.sessionID = sessionID;
            this.vknTcknList = vknTcknList;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName = "CheckGibUserResponse", WrapperNamespace = "http://tempuri.org/", IsWrapped = true)]
    public partial class CheckGibUserResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 0)]
        public ConnectPostbox.eFaturaWebServiceResultType CheckGibUserResult;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://tempuri.org/", Order = 1)]
        public System.Collections.Generic.List<ConnectPostbox.GibUserType> userList;

        public CheckGibUserResponse()
        {
        }

        public CheckGibUserResponse(ConnectPostbox.eFaturaWebServiceResultType CheckGibUserResult, System.Collections.Generic.List<ConnectPostbox.GibUserType> userList)
        {
            this.CheckGibUserResult = CheckGibUserResult;
            this.userList = userList;
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IPostBoxServiceChannel : ConnectPostbox.IPostBoxService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class PostBoxServiceClient : System.ServiceModel.ClientBase<ConnectPostbox.IPostBoxService>, ConnectPostbox.IPostBoxService
    {

        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);

        public PostBoxServiceClient(EndpointConfiguration endpointConfiguration) :
                base(PostBoxServiceClient.GetBindingForEndpoint(endpointConfiguration), PostBoxServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public PostBoxServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) :
                base(PostBoxServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public PostBoxServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) :
                base(PostBoxServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public PostBoxServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public string Ping()
        {
            return base.Channel.Ping();
        }

        public System.Threading.Tasks.Task<string> PingAsync()
        {
            return base.Channel.PingAsync();
        }

        public string ALive(string key)
        {
            return base.Channel.ALive(key);
        }

        public System.Threading.Tasks.Task<string> ALiveAsync(string key)
        {
            return base.Channel.ALiveAsync(key);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.LoginResponse ConnectPostbox.IPostBoxService.Login(ConnectPostbox.LoginRequest request)
        {
            return base.Channel.Login(request);
        }

        public bool Login(ConnectPostbox.LoginType login1, out string sessionID)
        {
            ConnectPostbox.LoginRequest inValue = new ConnectPostbox.LoginRequest();
            inValue.login = login1;
            ConnectPostbox.LoginResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).Login(inValue);
            sessionID = retVal.sessionID;
            return retVal.LoginResult;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.LoginResponse> LoginAsync(ConnectPostbox.LoginRequest request)
        {
            return base.Channel.LoginAsync(request);
        }

        public void Logout(string sessionID)
        {
            base.Channel.Logout(sessionID);
        }

        public System.Threading.Tasks.Task LogoutAsync(string sessionID)
        {
            return base.Channel.LogoutAsync(sessionID);
        }

        public bool sendEnvelope(ConnectPostbox.DocumentType envelope, string sessionID)
        {
            return base.Channel.sendEnvelope(envelope, sessionID);
        }

        public System.Threading.Tasks.Task<bool> sendEnvelopeAsync(ConnectPostbox.DocumentType envelope, string sessionID)
        {
            return base.Channel.sendEnvelopeAsync(envelope, sessionID);
        }

        public bool sendInvoice(ConnectPostbox.DocumentType invoice, string alias, string sessionID)
        {
            return base.Channel.sendInvoice(invoice, alias, sessionID);
        }

        public System.Threading.Tasks.Task<bool> sendInvoiceAsync(ConnectPostbox.DocumentType invoice, string alias, string sessionID)
        {
            return base.Channel.sendInvoiceAsync(invoice, alias, sessionID);
        }

        public bool sendApplicationResponse(ConnectPostbox.DocumentType appResp, string alias, string sessionID)
        {
            return base.Channel.sendApplicationResponse(appResp, alias, sessionID);
        }

        public System.Threading.Tasks.Task<bool> sendApplicationResponseAsync(ConnectPostbox.DocumentType appResp, string alias, string sessionID)
        {
            return base.Channel.sendApplicationResponseAsync(appResp, alias, sessionID);
        }

        public int sendEnvelopeEx(ConnectPostbox.DocumentType envelope, string sessionID)
        {
            return base.Channel.sendEnvelopeEx(envelope, sessionID);
        }

        public System.Threading.Tasks.Task<int> sendEnvelopeExAsync(ConnectPostbox.DocumentType envelope, string sessionID)
        {
            return base.Channel.sendEnvelopeExAsync(envelope, sessionID);
        }

        public int sendInvoiceEx(ConnectPostbox.DocumentType invoice, string alias, string sessionID)
        {
            return base.Channel.sendInvoiceEx(invoice, alias, sessionID);
        }

        public System.Threading.Tasks.Task<int> sendInvoiceExAsync(ConnectPostbox.DocumentType invoice, string alias, string sessionID)
        {
            return base.Channel.sendInvoiceExAsync(invoice, alias, sessionID);
        }

        public int sendSignedInvoice(ConnectPostbox.DocumentType invoice, string alias, string sessionID)
        {
            return base.Channel.sendSignedInvoice(invoice, alias, sessionID);
        }

        public System.Threading.Tasks.Task<int> sendSignedInvoiceAsync(ConnectPostbox.DocumentType invoice, string alias, string sessionID)
        {
            return base.Channel.sendSignedInvoiceAsync(invoice, alias, sessionID);
        }

        public int sendApplicationResponseEx(ConnectPostbox.DocumentType appResp, string alias, string sessionID)
        {
            return base.Channel.sendApplicationResponseEx(appResp, alias, sessionID);
        }

        public System.Threading.Tasks.Task<int> sendApplicationResponseExAsync(ConnectPostbox.DocumentType appResp, string alias, string sessionID)
        {
            return base.Channel.sendApplicationResponseExAsync(appResp, alias, sessionID);
        }

        public int sendEArchiveDocument(ConnectPostbox.DocumentType document, ConnectPostbox.EArchiveDocumentTypes docType, bool isSigned, string sessionID, string xsltUuid)
        {
            return base.Channel.sendEArchiveDocument(document, docType, isSigned, sessionID, xsltUuid);
        }

        public System.Threading.Tasks.Task<int> sendEArchiveDocumentAsync(ConnectPostbox.DocumentType document, ConnectPostbox.EArchiveDocumentTypes docType, bool isSigned, string sessionID, string xsltUuid)
        {
            return base.Channel.sendEArchiveDocumentAsync(document, docType, isSigned, sessionID, xsltUuid);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.receiveDocumentResponse ConnectPostbox.IPostBoxService.receiveDocument(ConnectPostbox.receiveDocumentRequest request)
        {
            return base.Channel.receiveDocument(request);
        }

        public bool receiveDocument(string sessionID, out ConnectPostbox.DocumentType document)
        {
            ConnectPostbox.receiveDocumentRequest inValue = new ConnectPostbox.receiveDocumentRequest();
            inValue.sessionID = sessionID;
            ConnectPostbox.receiveDocumentResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).receiveDocument(inValue);
            document = retVal.document;
            return retVal.receiveDocumentResult;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.receiveDocumentResponse> receiveDocumentAsync(ConnectPostbox.receiveDocumentRequest request)
        {
            return base.Channel.receiveDocumentAsync(request);
        }

        public int receiveDone(string fileID, string sessionID)
        {
            return base.Channel.receiveDone(fileID, sessionID);
        }

        public System.Threading.Tasks.Task<int> receiveDoneAsync(string fileID, string sessionID)
        {
            return base.Channel.receiveDoneAsync(fileID, sessionID);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.receiveInvoiceResponse ConnectPostbox.IPostBoxService.receiveInvoice(ConnectPostbox.receiveInvoiceRequest request)
        {
            return base.Channel.receiveInvoice(request);
        }

        public bool receiveInvoice(string sessionID, out ConnectPostbox.ElementType document)
        {
            ConnectPostbox.receiveInvoiceRequest inValue = new ConnectPostbox.receiveInvoiceRequest();
            inValue.sessionID = sessionID;
            ConnectPostbox.receiveInvoiceResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).receiveInvoice(inValue);
            document = retVal.document;
            return retVal.receiveInvoiceResult;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.receiveInvoiceResponse> receiveInvoiceAsync(ConnectPostbox.receiveInvoiceRequest request)
        {
            return base.Channel.receiveInvoiceAsync(request);
        }

        public int receiveInvoiceDone(string uuid, string sessionID)
        {
            return base.Channel.receiveInvoiceDone(uuid, sessionID);
        }

        public System.Threading.Tasks.Task<int> receiveInvoiceDoneAsync(string uuid, string sessionID)
        {
            return base.Channel.receiveInvoiceDoneAsync(uuid, sessionID);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.receiveApplicationResponseResponse ConnectPostbox.IPostBoxService.receiveApplicationResponse(ConnectPostbox.receiveApplicationResponseRequest request)
        {
            return base.Channel.receiveApplicationResponse(request);
        }

        public bool receiveApplicationResponse(string sessionID, out ConnectPostbox.ElementType document)
        {
            ConnectPostbox.receiveApplicationResponseRequest inValue = new ConnectPostbox.receiveApplicationResponseRequest();
            inValue.sessionID = sessionID;
            ConnectPostbox.receiveApplicationResponseResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).receiveApplicationResponse(inValue);
            document = retVal.document;
            return retVal.receiveApplicationResponseResult;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.receiveApplicationResponseResponse> receiveApplicationResponseAsync(ConnectPostbox.receiveApplicationResponseRequest request)
        {
            return base.Channel.receiveApplicationResponseAsync(request);
        }

        public int receiveApplicationResponseDone(string uuid, string sessionID)
        {
            return base.Channel.receiveApplicationResponseDone(uuid, sessionID);
        }

        public System.Threading.Tasks.Task<int> receiveApplicationResponseDoneAsync(string uuid, string sessionID)
        {
            return base.Channel.receiveApplicationResponseDoneAsync(uuid, sessionID);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.getApplicationResponseResponse ConnectPostbox.IPostBoxService.getApplicationResponse(ConnectPostbox.getApplicationResponseRequest request)
        {
            return base.Channel.getApplicationResponse(request);
        }

        public bool getApplicationResponse(string envelopeID, string sessionID, out ConnectPostbox.DocumentType document)
        {
            ConnectPostbox.getApplicationResponseRequest inValue = new ConnectPostbox.getApplicationResponseRequest();
            inValue.envelopeID = envelopeID;
            inValue.sessionID = sessionID;
            ConnectPostbox.getApplicationResponseResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).getApplicationResponse(inValue);
            document = retVal.document;
            return retVal.getApplicationResponseResult;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.getApplicationResponseResponse> getApplicationResponseAsync(ConnectPostbox.getApplicationResponseRequest request)
        {
            return base.Channel.getApplicationResponseAsync(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.getInvoiceStatusResponse ConnectPostbox.IPostBoxService.getInvoiceStatus(ConnectPostbox.getInvoiceStatusRequest request)
        {
            return base.Channel.getInvoiceStatus(request);
        }

        public bool getInvoiceStatus(string uuid, string sessionID, out ConnectPostbox.InvoiceStatus status, out string statusDescription, out string envelopeId)
        {
            ConnectPostbox.getInvoiceStatusRequest inValue = new ConnectPostbox.getInvoiceStatusRequest();
            inValue.uuid = uuid;
            inValue.sessionID = sessionID;
            ConnectPostbox.getInvoiceStatusResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).getInvoiceStatus(inValue);
            status = retVal.status;
            statusDescription = retVal.statusDescription;
            envelopeId = retVal.envelopeId;
            return retVal.getInvoiceStatusResult;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.getInvoiceStatusResponse> getInvoiceStatusAsync(ConnectPostbox.getInvoiceStatusRequest request)
        {
            return base.Channel.getInvoiceStatusAsync(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.getAppRespStatusResponse ConnectPostbox.IPostBoxService.getAppRespStatus(ConnectPostbox.getAppRespStatusRequest request)
        {
            return base.Channel.getAppRespStatus(request);
        }

        public bool getAppRespStatus(string uuid, string sessionID, out ConnectPostbox.AppRespStatus status, out string statusDescription, out string envelopeId)
        {
            ConnectPostbox.getAppRespStatusRequest inValue = new ConnectPostbox.getAppRespStatusRequest();
            inValue.uuid = uuid;
            inValue.sessionID = sessionID;
            ConnectPostbox.getAppRespStatusResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).getAppRespStatus(inValue);
            status = retVal.status;
            statusDescription = retVal.statusDescription;
            envelopeId = retVal.envelopeId;
            return retVal.getAppRespStatusResult;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.getAppRespStatusResponse> getAppRespStatusAsync(ConnectPostbox.getAppRespStatusRequest request)
        {
            return base.Channel.getAppRespStatusAsync(request);
        }

        public System.Collections.Generic.List<string> getEnvelopeList(System.DateTime beginDate, System.DateTime endDate, ConnectPostbox.SendRecvType opType, string sessionID, ConnectPostbox.PostBoxDateType dateBy)
        {
            return base.Channel.getEnvelopeList(beginDate, endDate, opType, sessionID, dateBy);
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> getEnvelopeListAsync(System.DateTime beginDate, System.DateTime endDate, ConnectPostbox.SendRecvType opType, string sessionID, ConnectPostbox.PostBoxDateType dateBy)
        {
            return base.Channel.getEnvelopeListAsync(beginDate, endDate, opType, sessionID, dateBy);
        }

        public ConnectPostbox.DocumentType getEnvelope(string envelopeID, string sessionID)
        {
            return base.Channel.getEnvelope(envelopeID, sessionID);
        }

        public System.Threading.Tasks.Task<ConnectPostbox.DocumentType> getEnvelopeAsync(string envelopeID, string sessionID)
        {
            return base.Channel.getEnvelopeAsync(envelopeID, sessionID);
        }

        public System.Collections.Generic.List<string> getInvoiceList(System.DateTime beginDate, System.DateTime endDate, ConnectPostbox.SendRecvType opType, string sessionID, ConnectPostbox.InvoiceDateType dateBy)
        {
            return base.Channel.getInvoiceList(beginDate, endDate, opType, sessionID, dateBy);
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> getInvoiceListAsync(System.DateTime beginDate, System.DateTime endDate, ConnectPostbox.SendRecvType opType, string sessionID, ConnectPostbox.InvoiceDateType dateBy)
        {
            return base.Channel.getInvoiceListAsync(beginDate, endDate, opType, sessionID, dateBy);
        }

        public ConnectPostbox.DocumentType getInvoice(string invoiceID, string sessionID)
        {
            return base.Channel.getInvoice(invoiceID, sessionID);
        }

        public System.Threading.Tasks.Task<ConnectPostbox.DocumentType> getInvoiceAsync(string invoiceID, string sessionID)
        {
            return base.Channel.getInvoiceAsync(invoiceID, sessionID);
        }

        public ConnectPostbox.DocumentType getUserList(ConnectPostbox.LoginType login, ConnectPostbox.UserListType listType)
        {
            return base.Channel.getUserList(login, listType);
        }

        public System.Threading.Tasks.Task<ConnectPostbox.DocumentType> getUserListAsync(ConnectPostbox.LoginType login, ConnectPostbox.UserListType listType)
        {
            return base.Channel.getUserListAsync(login, listType);
        }

        public ConnectPostbox.DocumentType getUserListNew(ConnectPostbox.LoginType login, ConnectPostbox.UserListType listType)
        {
            return base.Channel.getUserListNew(login, listType);
        }

        public System.Threading.Tasks.Task<ConnectPostbox.DocumentType> getUserListNewAsync(ConnectPostbox.LoginType login, ConnectPostbox.UserListType listType)
        {
            return base.Channel.getUserListNewAsync(login, listType);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.getApprovalFlowListResponse ConnectPostbox.IPostBoxService.getApprovalFlowList(ConnectPostbox.getApprovalFlowListRequest request)
        {
            return base.Channel.getApprovalFlowList(request);
        }

        public bool getApprovalFlowList(string sessionID, out ConnectPostbox.DocumentType document)
        {
            ConnectPostbox.getApprovalFlowListRequest inValue = new ConnectPostbox.getApprovalFlowListRequest();
            inValue.sessionID = sessionID;
            ConnectPostbox.getApprovalFlowListResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).getApprovalFlowList(inValue);
            document = retVal.document;
            return retVal.getApprovalFlowListResult;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.getApprovalFlowListResponse> getApprovalFlowListAsync(ConnectPostbox.getApprovalFlowListRequest request)
        {
            return base.Channel.getApprovalFlowListAsync(request);
        }

        public bool setApprovalFlowId(string invoiceUuid, int flowId, string sessionID)
        {
            return base.Channel.setApprovalFlowId(invoiceUuid, flowId, sessionID);
        }

        public System.Threading.Tasks.Task<bool> setApprovalFlowIdAsync(string invoiceUuid, int flowId, string sessionID)
        {
            return base.Channel.setApprovalFlowIdAsync(invoiceUuid, flowId, sessionID);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.getApprovalFlowResResponse ConnectPostbox.IPostBoxService.getApprovalFlowRes(ConnectPostbox.getApprovalFlowResRequest request)
        {
            return base.Channel.getApprovalFlowRes(request);
        }

        public bool getApprovalFlowRes(string invoiceUuid, int flowId, string sessionID, out int flowRes, out int flowAction)
        {
            ConnectPostbox.getApprovalFlowResRequest inValue = new ConnectPostbox.getApprovalFlowResRequest();
            inValue.invoiceUuid = invoiceUuid;
            inValue.flowId = flowId;
            inValue.sessionID = sessionID;
            ConnectPostbox.getApprovalFlowResResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).getApprovalFlowRes(inValue);
            flowRes = retVal.flowRes;
            flowAction = retVal.flowAction;
            return retVal.getApprovalFlowResResult;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.getApprovalFlowResResponse> getApprovalFlowResAsync(ConnectPostbox.getApprovalFlowResRequest request)
        {
            return base.Channel.getApprovalFlowResAsync(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.getDocumentStatusResponse ConnectPostbox.IPostBoxService.getDocumentStatus(ConnectPostbox.getDocumentStatusRequest request)
        {
            return base.Channel.getDocumentStatus(request);
        }

        public int getDocumentStatus(int docType, string uuid, int relRef, string sessionID, out int responseCode, out string responseDesc, out string envelopeId)
        {
            ConnectPostbox.getDocumentStatusRequest inValue = new ConnectPostbox.getDocumentStatusRequest();
            inValue.docType = docType;
            inValue.uuid = uuid;
            inValue.relRef = relRef;
            inValue.sessionID = sessionID;
            ConnectPostbox.getDocumentStatusResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).getDocumentStatus(inValue);
            responseCode = retVal.responseCode;
            responseDesc = retVal.responseDesc;
            envelopeId = retVal.envelopeId;
            return retVal.respStatus;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.getDocumentStatusResponse> getDocumentStatusAsync(ConnectPostbox.getDocumentStatusRequest request)
        {
            return base.Channel.getDocumentStatusAsync(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.getDocumentStatusExResponse ConnectPostbox.IPostBoxService.getDocumentStatusEx(ConnectPostbox.getDocumentStatusExRequest request)
        {
            return base.Channel.getDocumentStatusEx(request);
        }

        public int getDocumentStatusEx(int docType, string uuid, int relRef, string sessionID, out int responseCode, out string responseDesc, out string envelopeId, out System.DateTime currentDate)
        {
            ConnectPostbox.getDocumentStatusExRequest inValue = new ConnectPostbox.getDocumentStatusExRequest();
            inValue.docType = docType;
            inValue.uuid = uuid;
            inValue.relRef = relRef;
            inValue.sessionID = sessionID;
            ConnectPostbox.getDocumentStatusExResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).getDocumentStatusEx(inValue);
            responseCode = retVal.responseCode;
            responseDesc = retVal.responseDesc;
            envelopeId = retVal.envelopeId;
            currentDate = retVal.currentDate;
            return retVal.respStatus;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.getDocumentStatusExResponse> getDocumentStatusExAsync(ConnectPostbox.getDocumentStatusExRequest request)
        {
            return base.Channel.getDocumentStatusExAsync(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.getEArchiveXsltResponse ConnectPostbox.IPostBoxService.getEArchiveXslt(ConnectPostbox.getEArchiveXsltRequest request)
        {
            return base.Channel.getEArchiveXslt(request);
        }

        public bool getEArchiveXslt(string sessionID, out ConnectPostbox.DocumentType document)
        {
            ConnectPostbox.getEArchiveXsltRequest inValue = new ConnectPostbox.getEArchiveXsltRequest();
            inValue.sessionID = sessionID;
            ConnectPostbox.getEArchiveXsltResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).getEArchiveXslt(inValue);
            document = retVal.document;
            return retVal.getEArchiveXsltResult;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.getEArchiveXsltResponse> getEArchiveXsltAsync(ConnectPostbox.getEArchiveXsltRequest request)
        {
            return base.Channel.getEArchiveXsltAsync(request);
        }

        public int getInvoiceApplicationResponse(string sessionID, string uuid)
        {
            return base.Channel.getInvoiceApplicationResponse(sessionID, uuid);
        }

        public System.Threading.Tasks.Task<int> getInvoiceApplicationResponseAsync(string sessionID, string uuid)
        {
            return base.Channel.getInvoiceApplicationResponseAsync(sessionID, uuid);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.getInvoiceResponseDataResponse ConnectPostbox.IPostBoxService.getInvoiceResponseData(ConnectPostbox.getInvoiceResponseDataRequest request)
        {
            return base.Channel.getInvoiceResponseData(request);
        }

        public bool getInvoiceResponseData(string sessionID, string uuid, string responseType, out ConnectPostbox.DocumentType document)
        {
            ConnectPostbox.getInvoiceResponseDataRequest inValue = new ConnectPostbox.getInvoiceResponseDataRequest();
            inValue.sessionID = sessionID;
            inValue.uuid = uuid;
            inValue.responseType = responseType;
            ConnectPostbox.getInvoiceResponseDataResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).getInvoiceResponseData(inValue);
            document = retVal.document;
            return retVal.getInvoiceResponseDataResult;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.getInvoiceResponseDataResponse> getInvoiceResponseDataAsync(ConnectPostbox.getInvoiceResponseDataRequest request)
        {
            return base.Channel.getInvoiceResponseDataAsync(request);
        }

        public bool setApplicationResponseOption(string sessionID, int option)
        {
            return base.Channel.setApplicationResponseOption(sessionID, option);
        }

        public System.Threading.Tasks.Task<bool> setApplicationResponseOptionAsync(string sessionID, int option)
        {
            return base.Channel.setApplicationResponseOptionAsync(sessionID, option);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.getEArchiveInvoicePdfDataResponse ConnectPostbox.IPostBoxService.getEArchiveInvoicePdfData(ConnectPostbox.getEArchiveInvoicePdfDataRequest request)
        {
            return base.Channel.getEArchiveInvoicePdfData(request);
        }

        public bool getEArchiveInvoicePdfData(string sessionID, string uuid, bool allInvoicesOrJustSigned, bool isCanceled, out byte[] pdfData)
        {
            ConnectPostbox.getEArchiveInvoicePdfDataRequest inValue = new ConnectPostbox.getEArchiveInvoicePdfDataRequest();
            inValue.sessionID = sessionID;
            inValue.uuid = uuid;
            inValue.allInvoicesOrJustSigned = allInvoicesOrJustSigned;
            inValue.isCanceled = isCanceled;
            ConnectPostbox.getEArchiveInvoicePdfDataResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).getEArchiveInvoicePdfData(inValue);
            pdfData = retVal.pdfData;
            return retVal.getEArchiveInvoicePdfDataResult;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.getEArchiveInvoicePdfDataResponse> getEArchiveInvoicePdfDataAsync(ConnectPostbox.getEArchiveInvoicePdfDataRequest request)
        {
            return base.Channel.getEArchiveInvoicePdfDataAsync(request);
        }

        public ConnectPostbox.DocumentType getDocumentData(string sessionID, string uuid, ConnectPostbox.GetDocumentType docType, ConnectPostbox.DocumentDataType dataType)
        {
            return base.Channel.getDocumentData(sessionID, uuid, docType, dataType);
        }

        public System.Threading.Tasks.Task<ConnectPostbox.DocumentType> getDocumentDataAsync(string sessionID, string uuid, ConnectPostbox.GetDocumentType docType, ConnectPostbox.DocumentDataType dataType)
        {
            return base.Channel.getDocumentDataAsync(sessionID, uuid, docType, dataType);
        }

        public ConnectPostbox.DocumentType getReconciliationList(string sessionID, System.DateTime begDate, System.DateTime endDate, string begNum, string endNum, ConnectPostbox.SendRecvType opType, int docType)
        {
            return base.Channel.getReconciliationList(sessionID, begDate, endDate, begNum, endNum, opType, docType);
        }

        public System.Threading.Tasks.Task<ConnectPostbox.DocumentType> getReconciliationListAsync(string sessionID, System.DateTime begDate, System.DateTime endDate, string begNum, string endNum, ConnectPostbox.SendRecvType opType, int docType)
        {
            return base.Channel.getReconciliationListAsync(sessionID, begDate, endDate, begNum, endNum, opType, docType);
        }

        public int sendReconciliationReport(ConnectPostbox.DocumentType report, string sessionID)
        {
            return base.Channel.sendReconciliationReport(report, sessionID);
        }

        public System.Threading.Tasks.Task<int> sendReconciliationReportAsync(ConnectPostbox.DocumentType report, string sessionID)
        {
            return base.Channel.sendReconciliationReportAsync(report, sessionID);
        }

        public string createElementId(string sessionID, string year, string invoicePrefix, ConnectPostbox.GetDocumentType docType)
        {
            return base.Channel.createElementId(sessionID, year, invoicePrefix, docType);
        }

        public System.Threading.Tasks.Task<string> createElementIdAsync(string sessionID, string year, string invoicePrefix, ConnectPostbox.GetDocumentType docType)
        {
            return base.Channel.createElementIdAsync(sessionID, year, invoicePrefix, docType);
        }

        public int cancelEArchiveInvoice(string sessionID, string uuid, string elementId)
        {
            return base.Channel.cancelEArchiveInvoice(sessionID, uuid, elementId);
        }

        public System.Threading.Tasks.Task<int> cancelEArchiveInvoiceAsync(string sessionID, string uuid, string elementId)
        {
            return base.Channel.cancelEArchiveInvoiceAsync(sessionID, uuid, elementId);
        }

        public int SendEArchiveListForReconcilition(System.DateTime beginDate, System.DateTime endDate, string sessionID, System.Collections.Generic.List<ConnectPostbox.ReconInvoiceType> invoiceList, ConnectPostbox.InvoiceType invoiceType)
        {
            return base.Channel.SendEArchiveListForReconcilition(beginDate, endDate, sessionID, invoiceList, invoiceType);
        }

        public System.Threading.Tasks.Task<int> SendEArchiveListForReconcilitionAsync(System.DateTime beginDate, System.DateTime endDate, string sessionID, System.Collections.Generic.List<ConnectPostbox.ReconInvoiceType> invoiceList, ConnectPostbox.InvoiceType invoiceType)
        {
            return base.Channel.SendEArchiveListForReconcilitionAsync(beginDate, endDate, sessionID, invoiceList, invoiceType);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.SendDocumentResponse ConnectPostbox.IPostBoxService.SendDocument(ConnectPostbox.SendDocumentRequest request)
        {
            return base.Channel.SendDocument(request);
        }

        public ConnectPostbox.eFaturaWebServiceResultType SendDocument(string sessionID, System.Collections.Generic.List<string> paramList, ConnectPostbox.DocumentType document, out int refId)
        {
            ConnectPostbox.SendDocumentRequest inValue = new ConnectPostbox.SendDocumentRequest();
            inValue.sessionID = sessionID;
            inValue.paramList = paramList;
            inValue.document = document;
            ConnectPostbox.SendDocumentResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).SendDocument(inValue);
            refId = retVal.refId;
            return retVal.SendDocumentResult;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.SendDocumentResponse> SendDocumentAsync(ConnectPostbox.SendDocumentRequest request)
        {
            return base.Channel.SendDocumentAsync(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.GetDocumentResponse ConnectPostbox.IPostBoxService.GetDocument(ConnectPostbox.GetDocumentRequest request)
        {
            return base.Channel.GetDocument(request);
        }

        public ConnectPostbox.eFaturaWebServiceResultType GetDocument(string sessionID, System.Collections.Generic.List<string> paramList, out ConnectPostbox.ElementType document)
        {
            ConnectPostbox.GetDocumentRequest inValue = new ConnectPostbox.GetDocumentRequest();
            inValue.sessionID = sessionID;
            inValue.paramList = paramList;
            ConnectPostbox.GetDocumentResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).GetDocument(inValue);
            document = retVal.document;
            return retVal.GetDocumentResult;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.GetDocumentResponse> GetDocumentAsync(ConnectPostbox.GetDocumentRequest request)
        {
            return base.Channel.GetDocumentAsync(request);
        }

        public ConnectPostbox.eFaturaWebServiceResultType GetDocumentDone(string sessionID, string uuid, System.Collections.Generic.List<string> paramList)
        {
            return base.Channel.GetDocumentDone(sessionID, uuid, paramList);
        }

        public System.Threading.Tasks.Task<ConnectPostbox.eFaturaWebServiceResultType> GetDocumentDoneAsync(string sessionID, string uuid, System.Collections.Generic.List<string> paramList)
        {
            return base.Channel.GetDocumentDoneAsync(sessionID, uuid, paramList);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.GetDocumentStatusResponse1 ConnectPostbox.IPostBoxService.GetDocumentStatus(ConnectPostbox.GetDocumentStatusRequest1 request)
        {
            return base.Channel.GetDocumentStatus(request);
        }

        public ConnectPostbox.eFaturaWebServiceResultType GetDocumentStatus(string sessionID, string uuid, System.Collections.Generic.List<string> paramList, out ConnectPostbox.DocumentStatusType statusInfo)
        {
            ConnectPostbox.GetDocumentStatusRequest1 inValue = new ConnectPostbox.GetDocumentStatusRequest1();
            inValue.sessionID = sessionID;
            inValue.uuid = uuid;
            inValue.paramList = paramList;
            ConnectPostbox.GetDocumentStatusResponse1 retVal = ((ConnectPostbox.IPostBoxService)(this)).GetDocumentStatus(inValue);
            statusInfo = retVal.statusInfo;
            return retVal.GetDocumentStatusResult;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.GetDocumentStatusResponse1> GetDocumentStatusAsync(ConnectPostbox.GetDocumentStatusRequest1 request)
        {
            return base.Channel.GetDocumentStatusAsync(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.GetDocumentDataResponse ConnectPostbox.IPostBoxService.GetDocumentData(ConnectPostbox.GetDocumentDataRequest request)
        {
            return base.Channel.GetDocumentData(request);
        }

        public ConnectPostbox.eFaturaWebServiceResultType GetDocumentData(string sessionID, string uuid, System.Collections.Generic.List<string> paramList, out ConnectPostbox.DocumentType document)
        {
            ConnectPostbox.GetDocumentDataRequest inValue = new ConnectPostbox.GetDocumentDataRequest();
            inValue.sessionID = sessionID;
            inValue.uuid = uuid;
            inValue.paramList = paramList;
            ConnectPostbox.GetDocumentDataResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).GetDocumentData(inValue);
            document = retVal.document;
            return retVal.GetDocumentDataResult;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.GetDocumentDataResponse> GetDocumentDataAsync(ConnectPostbox.GetDocumentDataRequest request)
        {
            return base.Channel.GetDocumentDataAsync(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.GetDocumentListResponse ConnectPostbox.IPostBoxService.GetDocumentList(ConnectPostbox.GetDocumentListRequest request)
        {
            return base.Channel.GetDocumentList(request);
        }

        public ConnectPostbox.eFaturaWebServiceResultType GetDocumentList(string sessionID, System.Collections.Generic.List<string> paramList, out System.Collections.Generic.List<ConnectPostbox.Document> docList)
        {
            ConnectPostbox.GetDocumentListRequest inValue = new ConnectPostbox.GetDocumentListRequest();
            inValue.sessionID = sessionID;
            inValue.paramList = paramList;
            ConnectPostbox.GetDocumentListResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).GetDocumentList(inValue);
            docList = retVal.docList;
            return retVal.GetDocumentListResult;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.GetDocumentListResponse> GetDocumentListAsync(ConnectPostbox.GetDocumentListRequest request)
        {
            return base.Channel.GetDocumentListAsync(request);
        }

        public ConnectPostbox.eFaturaWebServiceResultType GetValidateGIBUser(string sessionID, System.Collections.Generic.List<string> paramList)
        {
            return base.Channel.GetValidateGIBUser(sessionID, paramList);
        }

        public System.Threading.Tasks.Task<ConnectPostbox.eFaturaWebServiceResultType> GetValidateGIBUserAsync(string sessionID, System.Collections.Generic.List<string> paramList)
        {
            return base.Channel.GetValidateGIBUserAsync(sessionID, paramList);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConnectPostbox.CheckGibUserResponse ConnectPostbox.IPostBoxService.CheckGibUser(ConnectPostbox.CheckGibUserRequest request)
        {
            return base.Channel.CheckGibUser(request);
        }

        public ConnectPostbox.eFaturaWebServiceResultType CheckGibUser(string sessionID, System.Collections.Generic.List<string> vknTcknList, out System.Collections.Generic.List<ConnectPostbox.GibUserType> userList)
        {
            ConnectPostbox.CheckGibUserRequest inValue = new ConnectPostbox.CheckGibUserRequest();
            inValue.sessionID = sessionID;
            inValue.vknTcknList = vknTcknList;
            ConnectPostbox.CheckGibUserResponse retVal = ((ConnectPostbox.IPostBoxService)(this)).CheckGibUser(inValue);
            userList = retVal.userList;
            return retVal.CheckGibUserResult;
        }

        public System.Threading.Tasks.Task<ConnectPostbox.CheckGibUserResponse> CheckGibUserAsync(ConnectPostbox.CheckGibUserRequest request)
        {
            return base.Channel.CheckGibUserAsync(request);
        }

        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }

        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }

        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.PostBoxServiceEndpoint))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.PostBoxServiceEndpoint_http))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }

        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.PostBoxServiceEndpoint))
            {
                return new System.ServiceModel.EndpointAddress("https://pb.elogo.com.tr/PostBoxService.svc");
            }
            if ((endpointConfiguration == EndpointConfiguration.PostBoxServiceEndpoint_http))
            {
                return new System.ServiceModel.EndpointAddress("http://pb.elogo.com.tr/PostBoxService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }

        public enum EndpointConfiguration
        {

            PostBoxServiceEndpoint,

            PostBoxServiceEndpoint_http,
        }
    }
}
